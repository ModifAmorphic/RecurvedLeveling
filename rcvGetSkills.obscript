scn rcvGetSkills

; locals
int i
string_var skillType
int iMajor
int iMinor
int skillCode
short isClassSkill

int skillLevel
float fSkillUseMinorMult
float fSkillUseFactor
float fSkillUseExp

; ouput
array_var skills
Begin Function { } ; Gets list of current skills split in to major and minor lists

	let skills := ar_Construct "StringMap"
	let skills["major"] := ar_Construct "Array"
	let skills["minor"] := ar_Construct "Array"
	let skills["all"] := ar_Construct "Array"

	; set first 11 skills to null so they are indexed by skillcode
	while (i < 12)
		let skills["all"][i] := ar_Null
		let i += 1
	loop
	set i to 0
	
	let skillCode := 12
	while (skillCode < 33)
		let isClassSkill := player.IsClassSkillC skillCode
		if isClassSkill
			set i to iMajor
			let skillType := "major"
			let iMajor := iMajor + 1
		else
			set i to iMinor
			let skillType := "minor"
			let iMinor := iMinor + 1
		endif
		
		; DebugPrint "recurve: skillCode=%g, isClassSkill=%g, skillType=%z" skillCode isClassSkill skillType

		let skills[skillType][i] := ar_Construct "StringMap"		
		let skills[skillType][i]["code"] := skillCode
		let skills[skillType][i]["isMajorSkill"] := isClassSkill
		let skills[skillType][i]["attributeCode"] := GetSkillGoverningAttributeC skillCode
		set skillLevel to player.GetBaseAV3C skillCode
		let skills[skillType][i]["amount"] := skillLevel
		set fSkillUseMinorMult to GetGameSetting "fSkillUseMinorMult"
		set fSkillUseFactor to GetGameSetting "fSkillUseFactor"
		set fSkillUseExp to GetGameSetting "fSkillUseExp"
		let skills[skillType][i]["baseExpReq"] := fSkillUseMinorMult * (fSkillUseFactor * skillLevel) ^ fSkillUseExp
		let skills[skillType][i]["useIncrements"] := ar_Construct "Array"
		let skills[skillType][i]["useIncrements"][0] := (GetSkillUseIncrementC skillCode 0)
		let skills[skillType][i]["useIncrements"][1] := (GetSkillUseIncrementC skillCode 1)

		if isClassSkill == 0
			let skills[skillType][i]["softCap"] := call rcvGetSkillSoftCap skillCode
		endif
		let skills["all"][skillCode] := skills[skillType][i]
		let skillCode := skillCode + 1
	loop
	
	SetFunctionValue skills
	sv_Destruct skillType
End