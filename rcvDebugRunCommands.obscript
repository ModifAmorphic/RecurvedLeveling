scn rcvDebugRunCommands

short isOverLevel
ref abilitySpell
ref abilityDrainEffect
int effectIndex
string_var effectName

Begin _Function {}
	if (Recurved.DumpLevel > 0)
        call rcvDebugDumpLevel Recurved.DumpLevel
    endif

    if (Recurved.DumpCurrentLevel)
        call rcvDebugDumpLevel player.GetLevel
    endif

    if (Recurved.DumpLevelCurve > 0)
        call rcvDebugDumpLevelCurve Recurved.DumpLevelCurve
    endif

    if (Recurved.ResetSkillUseOverrides)
        ; let majorSKillCode := (call rcvGetMajorSkills)[0]["code"]
	    let Recurved.SkillUseOverrides := ar_Construct "Array"
        let isOverLevel := call rcvPreventOverLevel 0 0
        ; if rcvPreventOverLevel didn't run, or ran with nothing capped, then
        ; apply attribute overage protection
        if (isOverLevel == 0)
            call rcvAddWeaponUseIncMod
            call rcvAddSkillIncreaseProtection ((call rcvGetMajorSkills)[0]["code"]) 0
        endif
        set RecurvedController.HasUpdate to 1
    endif

    if (Recurved.SlowAttributeSkills > -1)
        ; player.AddSpell 0001CE5C
        let effectName := ActorValueToStringC Recurved.SlowAttributeSkills
        let effectName := effectName + " Skill Progress Slowed"
        let abilityDrainEffect := DRAT
        SetName effectName, abilityDrainEffect

        let abilitySpell := rcvAttributeProtection
        ;RemoveAllEffectItems abilitySpell
        set effectIndex to AddFullEffectItem abilityDrainEffect 0 0 0 0 abilitySpell
        SetNthEffectItemActorValueC Recurved.SlowAttributeSkills abilitySpell effectIndex
        SetName effectName abilitySpell
        player.AddSpell abilitySpell
        DebugPrint "recurve: Added spell %n with effect %n." abilitySpell abilityDrainEffect
    endif
    set Recurved.DumpLevel to 0
    set Recurved.DumpCurrentLevel to 0
    set Recurved.DumpLevelCurve to 0
    set Recurved.ResetSkillUseOverrides to 0
    set Recurved.SlowAttributeSkills to -1
    sv_Destruct effectName
End