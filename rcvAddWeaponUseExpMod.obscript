scn rcvAddWeaponUseExpMod

ref weapon
int weaponType
int skillCode
float speed
float damage
float dps
float normalizeToDps
float useExpMod

; inputs
float normalizeToSpeed
float normalizeTodamage
Begin _Function { normalizeToSpeed normalizeTodamage }

    ; Disabled, return
    if (Recurved.WeaponExpNormalizedDisabled)
        return
    endif
    
    set weapon to Player.GetEquippedObject 16
    set weaponType to GetWeaponType weapon
    ; Weapon Types
    ; 0: Blade1H
    ; 1: Blade2H
    ; 2: Blunt1H
    ; 3: Blunt2H
    ; 4: Staff
    ; 5: Bow

    if (weaponType < 2)
        set skillCode to 17 ; Blade
    elseif (weaponType < 5)
        set skillCode to 16 ; Blunt
    elseif (weaponType == 5)
        set skillCode to 28 ; Marksman
    endif

    ; Don't normalize Marksman. No speed difference.
    if (weaponType == 28)
        return
    endif
    
    let speed := GetWeaponSpeed weapon
    	set useExpMod to speed / normalizeToSpeed
    if (damage > 0)
        let damage := GetAttackDamage weapon
        set normalizeToDps to normalizeToSpeed * normalizeTodamage
        set dps to speed * damage
        set useExpMod to useExpMod * (normalizeToDps / dps)
    endif


	DebugPrint "recurve: Normalizing weapon type %g. Adding skill use override mod of %.4f for skill %g." weaponType useExpMod skillCode
    ; Remove any existing weapon use overrides
    call rcvDeleteSkillOverrides Recurved.SkillUseOverrideReasons["Weapon"]
    ; Add the new override
	call rcvAddSkillUseExpOverride skillCode useExpMod useExpMod Recurved.SkillUseOverrideReasons["Weapon"]
End