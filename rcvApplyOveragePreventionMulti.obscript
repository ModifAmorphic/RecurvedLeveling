scn rcvApplyOveragePreventionMulti

; locals
int i
int attrIndex
int skillCode
array_var majorSkills
; input
array_var attributes      ; Attributes whose Major Skills should have skill use overrides added
; output
array_var skillsModified  ; Array of skill codes who have had the prevention multiplier applied to their use experience increments.
Begin _Function { attributes } ; Adds skill use overrides to the Recurved.SkillUseOverrides array for skills goverened by each attribute in the passed attributes argument

	let skillsModified := ar_Construct Array
	while (attrIndex < ar_Size attributes)
		let majorSkills := call rcvGetAttributeMajorSkills attributes[attrIndex]
		DebugPrint "recurve: Found %g Major Skills for Attribute %g." (ar_Size majorSkills) attributes[attrIndex]
		while (i < ar_Size majorSkills)
			let skillCode := majorSkills[i]["code"]
			call rcvAddSkillUseExpOverride skillCode (Recurved.MajorOveragePreventionMulti) (Recurved.MajorOveragePreventionMulti) (Recurved.SkillUseOverrideReasons["OverageProtection"])
			DebugPrint "recurve: Major Skill Overage Prevention added use exp overrides for skill %g, attribute %g. MajorOveragePreventionMulti: %g" skillCode attributes[attrIndex] Recurved.MajorOveragePreventionMulti
			let i += 1
			ar_Append skillsModified skillCode
		loop
		let attrIndex += 1
	loop

	SetFunctionValue skillsModified
	
End