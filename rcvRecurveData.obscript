scn rcvRecurveData

; Attribute "Constants"
int StrengthAvc
int EnduranceAvc
int SpeedAvc
int AgilityAvc
int PersonalityAvc
int IntelligenceAvc
int WillpowerAvc
int LuckAvc
int HealthAvc
int MagickaAvc
int FatigueAvc

array_var SkillUseOverrideReasons

; ### Ini variables  ###
;; Major Overage Prevention temporarily caps major skill increases for governing attributes 
;;; that have reached the max for the current level until 3 attributes have been maxed.
;;; Disabling this allows Major Attributes to always increase.
short AttributeProtectionDisabled
;; Disables soft caps on minor skills
short MinorSkillSoftCapsDisabled
;; Disables additional bonus progress points towards attribute increases 
;;; when major skills increase in level
short AttributeBonusDisabled
;; Disables increases Major skills will contribute Secondary Attribute Bonuses
short SecondaryAttributesDisabled
;; Disables carrying over of remaining Attribute progress from the previous level
short RemainingAttributeProgressDisabled
;; Disables normalization of endurance for health increase calculations.
;;; Without this enabled, a character could end up with considerably less life under the default
;;; config than typical with vanilla. The inverse is also true if the TierXMaxAttributeUp values 
;;; are adjusted to allow for larger attribute gains early on.
short EnduranceHealthNormalizationDisabled
;; Disables normalization of on hit experience for Blade and Blunt weapons.
;;; When enabled, uses weapon speed of each weapon to calculate the 
;;; experience per hit. Per hit experience increases as weapon speed decreases,
;;; causing all weapons to generate the same amount of experience over time.
short WeaponExpNormalizedDisabled
;; Debugging
short DebugEnabled

; Major Skills - Over leveling protection

; ;; Increases amount of experience required to level a Major skill once there are
; ;; enough attribute progress points banked for the full attribute increase. Penalty is removed
; ;; when a 3rd full attribute increase is acheived or the character is leveled.
; ;;; 0  : Prevents experience gain of any major skills responsible for attribute increases
; ;;; 1  : No effect
; ;;; 2+ : Multiplies the amount of experience by the MajorOveragePreventionMulti
; float MajorOveragePreventionMulti

;; Exponent for increasing major experience requirements that have maxed their governing attribute's
;; bonus and enough major skill ups have occured for the full attribute increase. Penalty is removed
;; when a 3rd full attribute increase is acheived or the character is leveled. 
int Tier1OverageProtectionExponent
int Tier2OverageProtectionExponent
int Tier3OverageProtectionExponent
int Tier4OverageProtectionExponent

;; Guards against missed attribute increases during level ups.
;; Will stop all major experience gains one progress point (skill level) before
;; level up if you have not obtained the minimum amount of maxed attribute bonus points*
;; configured with this setting.
;; * The minimum amount will automatically be lowered to account for fully maxed (100) attributes.
;;; 0  : Disables this feature.
;;; 1  : Requires at least 1 maxed attribute prior to level up
;;; 2  : Requires at least 2 maxed attributes. Use for leveling up 2 attributes and luck.
;;; 3  : (Default) Requires 3 maxed attributes before leveling.
int MinimumMaxedAttributes

;;; Base weapon speed to normalize all other weapon speeds to in order to calculate the 
;;; experience per hit. Per hit experience increases as weapon speed decreases,
;;; causing all weapons to generate the same amount of experience over time.
;;; By default, set to the fastest weapon (daggers) - 1.4 attacks per second.
short ExpNormalizedWeaponSpeed

;;; Damage to normalize weapons against for experience gains. Higher damage weapons earn more 
;;; exp per hit to componsate for less attacks prior to target death. Works in combination with
;;; ExpNormalizedWeaponSpeed to calculate a base DPS in which all other weapons are normalized 
;;; against. The lower the value, the higher the experience increase will be for higher dps weapons.
;;; [Weapon Exp Per Hit] = (Equipped Weapon Damage x Speed) /  (ExpNormalizedWeaponDamage * ExpNormalizedWeaponSpeed) * [Normalized Weapon Skill Exp Per Use]
;;; By default, set to the worst weapon (rusty dagger) - 3 damage.
;;;; 0  - Disables Exp increases from damage
;;;; 1+ - Damage to normalize exp gains against.
short ExpNormalizedWeaponDamage

; Level Scaling Settings
;; Increases amount of experience required to level a skill past the soft cap. 
float SoftCapMulti

;; Controls what percentage of each remaining attribute progress is brought over to the next level.
;; Vanilla does not bring any unused points over to the next level.
;; Set this to a value less than 1 unless you want to be swimming in attribute progress points in a few levels.
float RemainingAttributeProgressPerc

;; Controls when level tiers start and end.
int Tier1StartLevel
int Tier2StartLevel
int Tier3StartLevel
int Tier4StartLevel
;; Sets attribute points gained per level up for a tier
int Tier1MaxAttributeUp
int Tier2MaxAttributeUp
int Tier3MaxAttributeUp
int Tier4MaxAttributeUp
;; Major Skills increases required for a level up
int Tier1LevelUpSkillIncs
int Tier2LevelUpSkillIncs
int Tier3LevelUpSkillIncs
int Tier4LevelUpSkillIncs
;; Adds additonal progress points On Major skill ups
int Tier1MajorAttributeBonus
int Tier2MajorAttributeBonus
int Tier3MajorAttributeBonus
int Tier4MajorAttributeBonus
;; Increases an attribute's secondary attribute progress on Major skill increase. Has no effect if SecondaryAttributesDisabled is set.
int Tier1SecondaryAttributeBonus
int Tier2SecondaryAttributeBonus
int Tier3SecondaryAttributeBonus
int Tier4SecondaryAttributeBonus
;; Maps a skill's governing attribute to a secondary attribute to increase.
int StrengthSecondary
int EnduranceSecondary
int SpeedSecondary
int AgilitySecondary
int PersonalitySecondary
int IntelligenceSecondary
int WillpowerSecondary

;; Converts endurance increases to the normalized amount when calculating health increases on level ups. This is done
;; to compensate the lower attribute inceases in lower levels.
int Tier1EnduranceNormalizeAmount
int Tier2EnduranceNormalizeAmount
int Tier3EnduranceNormalizeAmount
int Tier4EnduranceNormalizeAmount

;; Tutorial Message box shown the first time no more skill increases are allowed before a level up. Only shows once.
string_var TutorialOverlevelMessage
;; Tutorial Message box shown the first time an attribute's major skill(s) have their experience penalized.
string_var TutorialAttributeProtectionMessage
;; Tutorial Message box shown the first time an attribute's major skill(s) have their experience penalized.
string_var TutorialAttributeFailsafeMessage

; ### End Ini variables  ###

;;; Contains the secondary's above indexed by primary attribute code for lookups.
array_var AttributeSecondaries

; End External ini variables
array_var DefaultSkillUseIncrements

; Persistant Arrays for tracking Levels
array_var Levels
array_var LevelCurves
; Skils that are temporarily capped once their governing attribute has enough progress points.
array_var SkillUseOverrides

; ; Flag for when character has a level pending
; short LevelPending
; Flag for delayed rest of level progress back to the maximum
short DelayedResetLevelProgress

;; Level Data - Reset on Level Up
; Amount of attribute progress over the max needed for the next level
int ExcessAttributeProgress

short AttributeFailsafeEnabled

; Keeps track of attribute bonuses for the level
array_var SecondaryAttribBonuses

; short WeaponEquipped

; Debug "Commands"
int DumpLevel
short DumpCurrentLevel
int DumpLevelCurve
short ResetSkillUseOverrides