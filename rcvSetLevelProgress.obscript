scn rcvSetLevelProgress

array_var prevCurve
array_var remainingAttrProg
int points
int levelsAmt
int curvesAmt

int i
int attributeCode
int remainingPoints
int progressPoints

Begin _Function {  } ; Sets attribute progress points based on remaining points from previous level
	let levelsAmt := ar_Size Recurved.Levels
    let curvesAmt := ar_Size Recurved.LevelCurves

	if (levelsAmt < 1 || curvesAmt < 1) && (levelsAmt > player.GetLevel - 2) && (curvesAmt > player.GetLevel - 2)
		DebugPrint "recurve: Character leveled but no data was available to apply attribute progress carryover from previous levels. Total levels: %g, Total Curves: %g." levelsAmt curvesAmt
		return
	endif
	let prevCurve := call rcvGetLevelCurve (player.GetLevel - 1) 0
	let remainingAttrProg := call rcvGetRemainingAttributeProgress (Recurved.Levels[player.GetLevel - 2]) prevCurve
    let points := ar_Size remainingAttrProg
	DebugPrint "recurve: Character leveled. Applying any left over attribute points to the current level. Found %g points." points
	if (points > 0)
		;call rcvSetAttributeProgress (remainingAttrProg)
	    ;call rcvSetAttributeProgress (call rcvGetRemainingAttributeProgress (Recurved.Levels[player.GetLevel - 2]) prevCurve)
		while (i < points)
			let attributeCode := remainingAttrProg[i]["attributeCode"]
			let remainingPoints := remainingAttrProg[i]["progressPoints"]
			set progressPoints to GetPCAttributeBonusC attributeCode
			SetPCAttributeBonusC attributeCode (progressPoints + remainingPoints)
			let i += 1
		loop
	endif
	
End