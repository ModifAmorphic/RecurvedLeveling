scn rcvApplyOverLevelProtection

int i

; Overlevel variables
short isMajorSkill
int lvlProgress
int overLvlProgress
int maxLvlProgress
int maxAttrbProgOver
int skillLevel
array_var useOverride

; inputs
int skillCode ; Actor Value Code of the skill
int skillIncrease ; The amount the skill will or has increased.
int isScripted ; Whether or not the increase was caused by a scripted event.

; Outputs
short skillsCapped

Begin _Function { skillCode skillIncrease isScripted }

	set skillsCapped to 0
	set isMajorSkill to player.IsClassSkillC skillCode
	if (isMajorSkill == 0)
		SetFunctionValue skillsCapped
		return
	endif

	set lvlProgress to GetPCMajorSkillUps
	; Attribute progress needed for the current level
	set maxLvlProgress to GetGameSetting "iLevelUpSkillCount"
	; Attribute progress needed for the level after this, minus 1
	let maxAttrbProgOver := (Recurved.LevelCurves[player.GetLevel]["iLevelUpSkillCount"]) - 1
	let skillLevel := (player.GetBaseAV3C skillCode) + skillIncrease

	if (lvlProgress > maxLvlProgress)
		set overLvlProgress to lvlProgress - maxLvlProgress
		let Recurved.ExcessAttributeProgress += overLvlProgress
		if (Recurved.ExcessAttributeProgress >= maxAttrbProgOver)
			DebugPrint "recurve: Maximum attribute progress over the next level reached. Hardcapping all skill progress until next rest."
			; Hardcap all skills
			set i to 12
			while (i < 33)
				let useOverride := ar_Construct StringMap
				let useOverride["skillCode"] := i
				let useOverride["reason"] := Recurved.SkillUseOverrideReasons["Overlevel"]
				let useOverride["useExp"] := sv_Construct Array
				let useOverride["useExp"][0] := 0
				let useOverride["useExp"][1] := 0
				ar_Append Recurved.SkillUserOverrides useOverride
				let i += 1
			loop
			let useOverride := ar_Null
			set i to 0
			set skillsCapped to 1
		endif
		; Limit the level progress to the max to prevent adding to the next level
		DebugPrint "recurve: Overlevel Protection - Setting current major skillups to %g/%g from %g/%g. Stashed excess levels: %g." maxLvlProgress maxLvlProgress lvlProgress maxLvlProgress Recurved.ExcessAttributeProgress
		SetPCMajorSkillUps maxLvlProgress
	endif

	DebugPrint "recurve: PreventOverlevel processed for Skill: %g. IsMajor: %g, SkillIncrease: %g, Progress: %g/%g, maxAttrbProgOver: %g, skillLevel: %g, ExcessAttributeProgress: %g, isScripted: %g, skillsCapped: %g." skillCode isMajorSkill skillIncrease lvlProgress maxLvlProgress maxAttrbProgOver skillLevel Recurved.ExcessAttributeProgress isScripted skillsCapped
	SetFunctionValue skillsCapped
	
End