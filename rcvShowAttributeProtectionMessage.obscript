scn rcvShowAttributeProtectionMessage

int i
int attributeCode
string_var attributeName
string_var attributeNames
string_var attributeReplacer
string_var difficultyReplacer
string_var message
float useExpMod
array_var penalizedAttributes

Begin _Function { penalizedAttributes }
	while (i < ar_Size penalizedAttributes)
		let attributeCode := penalizedAttributes[i]["code"]
		let useExpMod := penalizedAttributes[i]["useExpModifier"]
		let attributeName := ActorValueToStringC attributeCode
		if (i == 0)
			let attributeNames := sv_Construct "%z" attributeName
		else
			sv_Replace " and |, " attributeName
			let attributeNames := sv_Construct "%z and %z" attributeNames attributeName
		endif
		let i += 1
	loop
	let attributeReplacer := sv_Construct "{{AttributeName}}|%z" attributeNames
	;let message := sv_Construct "%z" Recurved.AttributeProtectionMessage
	sv_Replace $attributeReplacer message
	if (useExpMod == 0)
		let message := sv_Construct "Experience gains are disabled for %z skills." attributeNames
	elseif (useExpMod < 2)
		let message := sv_Construct "Training %z skills are slightly more difficult than normal." attributeNames
		; let difficultyReplacer := sv_Construct "{{Difficulty}}|slightly more difficult than normal"
	elseif (useExpMod < 4)
		let message := sv_Construct "Training %z skills are considerably more difficult than normal." attributeNames
		; let difficultyReplacer := sv_Construct "{{Difficulty}}|considerably more difficult than normal"
	elseif (useExpMod < 8)
		let message := sv_Construct "Training %z skills are drastically more difficult than normal." attributeNames
		; let difficultyReplacer := sv_Construct "{{Difficulty}}|significantly more difficult than normal"
	else
		let message := sv_Construct "Training %z skills are impossible at this point." attributeNames
		;let difficultyReplacer := sv_Construct "{{Difficulty}}|impossible"
	endif
	; sv_Replace $difficultyReplacer message
	Message $message
End