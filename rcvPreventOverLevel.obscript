scn rcvPreventOverLevel

int i

; Overlevel variables
int lvlProgress
;int overLvlProgress
int maxCurrentLvLProgress
int maxAttrbProgOver
int overLvlProgress
int resetProgress
array_var currentCurve
array_var nextCurve
array_var allSkills

; inputs
int addedLevelProgress ; The amount additional progress to add to the existing progress for calculating overlevel protections.
int isIncScripted         ; Whether or not the increase was caused by a scripted event.

; Outputs
short overlevelPrevented

Begin _Function { addedLevelProgress isIncScripted }

	set lvlProgress to GetPCMajorSkillUps
	if (isIncScripted == 0)
		let lvlProgress += addedLevelProgress
	endif
	; Attribute progress needed for the current level
	let currentCurve := call rcvGetLevelCurve player.GetLevel 0 1
	let maxCurrentLvLProgress := currentCurve["iLevelUpSkillCount"]
	; Attribute progress needed for the level after this, minus 1
	let nextCurve := call rcvGetLevelCurve (player.GetLevel + 1) 0 0
	let maxAttrbProgOver := nextCurve["iLevelUpSkillCount"] - 1
	DebugPrint "recurve: Starting OverLevel protection processing. Calculated Level Progress: %g/%g." lvlProgress maxCurrentLvLProgress
	if (lvlProgress > maxCurrentLvLProgress)
		set overLvlProgress to lvlProgress - maxCurrentLvLProgress
		DebugPrint "recurve: overLvlProgress=%g, lvlProgress=%g, maxAttrbProgOver=%g." overLvlProgress lvlProgress maxAttrbProgOver
		if (overLvlProgress >= maxAttrbProgOver)
			if (Recurved.IsOverLeveled == 0)
				DebugPrint "recurve: Maximum attribute progress over the next level reached. Hardcapping all skill progress until next rest."
				; reset Recurved.SkillUseOverrides since we're about to block every skill from gaining progress
				let Recurved.SkillUseOverrides := ar_Construct "Array"
				; Hardcap all skills
				let allSkills := ar_Construct "Array"
				set i to 12
				while (i < 33)
					ar_Append allSkills i
					call rcvAddSkillUseIncOverride i 0 0 Recurved.OverrideReasonOverlevel
					let i += 1
				loop
				DebugPrint "recurve: Added %g overrides to Recurved.SkillUseOverrides. " (ar_Size Recurved.SkillUseOverrides)
			endif
			set overlevelPrevented to 1
		endif
		; Limit the level progress to the max to prevent adding to the next level
		if (overlevelPrevented)
			if (isIncScripted)
				; progress already applied for scripted events
				set resetProgress to maxCurrentLvLProgress + maxAttrbProgOver
				DebugPrint "recurve: Overlevel Protection - Reseting level progress from %g/%g to %g/%g." lvlProgress maxCurrentLvLProgress resetProgress maxCurrentLvLProgress
				SetPCMajorSkillUps resetProgress
			else
				; progress not applied, so back it out before it gets applied
				set resetProgress to maxCurrentLvLProgress + maxAttrbProgOver - addedLevelProgress
				DebugPrint "recurve: Overlevel Protection - Resetting level progress from %g/%g to %g/%g." lvlProgress maxCurrentLvLProgress resetProgress maxCurrentLvLProgress
				SetPCMajorSkillUps resetProgress
			endif
			call rcvAddEvent Recurved.EventTypeOverLeveled lvlProgress resetProgress ar_Null
		endif
	endif

	DebugPrint "recurve: PreventOverlevel processed for addedLevelProgress: %g, Progress: %g/%g, maxAttrbProgOver: %g, isIncScripted: %g, overLvlProgress: %g." addedLevelProgress lvlProgress maxCurrentLvLProgress maxAttrbProgOver isIncScripted overLvlProgress
	SetFunctionValue overlevelPrevented
	
End