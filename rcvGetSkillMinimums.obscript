scn rcvGetSkillMinimums
;locals
int skillCode

; outputs
array_var minimums
; params
Begin _Function {  } ; Gets array of skills, indexed by skill code, and their minimum values
	;PrintToConsole "RecurvedGetSkills: Major Skills:"
	let minimums := ar_Construct Array

	while (skillCode < 33)
		let minimums[skillCode] := ar_Construct StringMap
		let minimums[skillCode]["base"] := 0
		let minimums[skillCode]["racial"] := 0
		let minimums[skillCode]["specialized"] := 0
		let minimums[skillCode]["major"] := 0
		let minimums[skillCode]["modified"] := 0
		if skillCode > 11
			let minimums[skillCode]["base"] := 5
			let minimums[skillCode]["racial"] := GetRaceSkillBonusC skillCode player.GetRace
			if call rcvGetIsSkillSpecialized skillCode
				let minimums[skillCode]["specialized"] := 5
			endif
			if player.IsClassSkillC skillCode
				let minimums[skillCode]["major"] := 20
			endif
			let minimums[skillCode]["modified"] := minimums[skillCode]["base"] + minimums[skillCode]["racial"] + minimums[skillCode]["specialized"] + minimums[skillCode]["major"]
			;DebugPrint "recurve: Skill %g has a modified minimum value of %g." skillCode minimums[skillCode]["modified"]
		endif
		let skillCode := skillCode + 1
	loop
	
	SetFunctionValue minimums
End